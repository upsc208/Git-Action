name: Deploy to Minikube

on:
  push:
    branches:
      - master  # master 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker

      - name: Decode Secrets & Set Variables
        run: |
          echo "${{ secrets.USERNAME_SECRET }}" | base64 -d > username.txt
          echo "${{ secrets.PASSWORD_SECRET }}" | base64 -d > password.txt
          echo "DOCKER_USER=$(cat username.txt)" >> $GITHUB_ENV
          echo "DOCKER_PASS=$(cat password.txt)" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          # DOCKER_USER 변수 확인
          echo "DOCKER_USER: $DOCKER_USER"

          # Docker 빌드 (태그를 DOCKER_USER로 지정)
          docker build -t $DOCKER_USER/my-nginx-app:latest .
          
          # Docker Hub 로그인
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
          
          # 빌드된 이미지 푸시
          docker push "$DOCKER_USER/my-nginx-app:latest"

      - name: Deploy to Minikube
        run: |
          # Deployment 존재 여부 확인 후 생성
          kubectl get deployment nginx-test || kubectl create deployment nginx-test --image=$DOCKER_USER/my-nginx-app:latest --dry-run=client -o yaml | kubectl apply -f -

          # Deployment 업데이트 (컨테이너 이름은 nginx)
          kubectl set image deployment/nginx-test nginx=$DOCKER_USER/my-nginx-app:latest

          # 즉시 롤아웃 상태 확인
          kubectl rollout status deployment/nginx-test --timeout=120s || kubectl get pods -o wide

      - name: Expose Service
        run: |
          # 서비스가 없으면 생성
          kubectl get service nginx-test || kubectl expose deployment nginx-test --type=NodePort --port=80
          
          # 현재 서비스 URL 확인
          minikube service nginx-test --url
